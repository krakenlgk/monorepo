{
  "name": "fullstack-monorepo",
  "version": "1.0.0",
  "description": "Full-stack monorepo with Next.js frontend and Nest.js backend",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "dev": "npm run env:setup && concurrently --kill-others-on-fail --names \"SHARED,BACKEND,FRONTEND\" --prefix-colors \"blue,green,cyan\" \"npm run dev:shared\" \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "npm run dev --workspace=packages/frontend",
    "dev:backend": "npm run dev --workspace=packages/backend",
    "dev:shared": "npm run dev --workspace=packages/shared",
    "dev:frontend-only": "npm run env:setup && npm run build:shared && npm run dev:frontend",
    "dev:backend-only": "npm run env:setup && npm run build:shared && npm run dev:backend",
    "dev:full": "npm run env:setup && npm run db:setup && npm run dev",
    "build": "npm run build:shared && npm run build:backend && npm run build:frontend",
    "build:frontend": "npm run build --workspace=packages/frontend",
    "build:backend": "npm run build --workspace=packages/backend",
    "build:shared": "npm run build --workspace=packages/shared",
    "build:prod": "NODE_ENV=production npm run build",
    "build:analyze": "npm run build && npm run analyze:frontend",
    "analyze:frontend": "npm run analyze --workspace=packages/frontend",
    "start": "concurrently --names \"BACKEND,FRONTEND\" --prefix-colors \"green,cyan\" \"npm run start:backend\" \"npm run start:frontend\"",
    "start:frontend": "npm run start --workspace=packages/frontend",
    "start:backend": "npm run start --workspace=packages/backend",
    "start:prod": "NODE_ENV=production npm run start",
    "test": "npm run test --workspaces",
    "test:watch": "npm run test:watch --workspaces",
    "test:ci": "npm run test --workspaces --if-present",
    "test:e2e": "npm run test:e2e --workspace=packages/backend",
    "test:coverage": "npm run test:cov --workspaces --if-present",
    "lint": "eslint \"packages/**/*.{ts,tsx,js,jsx}\" --fix",
    "lint:check": "eslint \"packages/**/*.{ts,tsx,js,jsx}\"",
    "format": "prettier --write \"packages/**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"packages/**/*.{ts,tsx,js,jsx,json,md}\"",
    "type-check": "npm run type-check --workspaces",
    "type-check:ci": "npm run type-check --workspaces --if-present",
    "quality": "npm run lint:check && npm run format:check && npm run type-check:ci",
    "quality:fix": "npm run lint && npm run format",
    "clean": "npm run clean --workspaces",
    "clean:all": "npm run clean && rm -rf node_modules packages/*/node_modules",
    "clean:build": "npm run clean && npm run build",
    "install:all": "npm install && npm run build:shared",
    "setup": "npm run install:all && npm run env:setup && npm run db:setup",
    "env:setup": "npm run env:copy && npm run env:validate",
    "env:copy": "node scripts/setup-env.js",
    "env:validate": "node scripts/validate-env.js",
    "db:setup": "npm run db:migrate --workspace=packages/backend",
    "db:migrate": "npm run migration:run --workspace=packages/backend",
    "db:migrate:generate": "npm run migration:generate --workspace=packages/backend",
    "db:migrate:revert": "npm run migration:revert --workspace=packages/backend",
    "db:reset": "npm run db:reset --workspace=packages/backend",
    "docker:dev": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "npm run docker:down && npm run docker:dev",
    "health": "npm run env:validate && npm run type-check:ci && npm run lint:check",
    "health:fix": "npm run env:setup && npm run quality:fix",
    "debug:backend": "npm run dev:backend -- --inspect",
    "debug:frontend": "npm run dev:frontend -- --inspect",
    "logs:backend": "npm run start:backend 2>&1 | tee logs/backend.log",
    "logs:frontend": "npm run start:frontend 2>&1 | tee logs/frontend.log",
    "reset": "npm run clean:all && npm install && npm run setup",
    "postinstall": "npm run build:shared",
    "dev:quick": "npm run build:shared && concurrently --kill-others-on-fail --names \"BACKEND,FRONTEND\" --prefix-colors \"green,cyan\" \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:debug": "npm run env:setup && concurrently --kill-others-on-fail --names \"SHARED,BACKEND,FRONTEND\" --prefix-colors \"blue,green,cyan\" \"npm run dev:shared\" \"npm run debug:backend\" \"npm run dev:frontend\"",
    "dev:watch": "npm run env:setup && npm run build:shared && concurrently --kill-others-on-fail --names \"BACKEND,FRONTEND\" --prefix-colors \"green,cyan\" \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:test": "npm run env:setup && npm run test:watch",
    "build:watch": "concurrently --names \"SHARED,BACKEND,FRONTEND\" --prefix-colors \"blue,green,cyan\" \"npm run dev:shared\" \"npm run build:backend -- --watch\" \"npm run build:frontend\"",
    "env:check": "npm run env:validate",
    "env:reset": "rm -f .env packages/backend/.env packages/frontend/.env.local && npm run env:setup",
    "workspace:info": "npm ls --workspaces --depth=0",
    "workspace:outdated": "npm outdated --workspaces",
    "workspace:audit": "npm audit --workspaces",
    "status": "npm run env:validate && npm run health",
    "info": "echo 'ðŸ“¦ Monorepo Information:' && echo '  - Frontend: Next.js (packages/frontend)' && echo '  - Backend: Nest.js (packages/backend)' && echo '  - Shared: TypeScript utilities (packages/shared)' && echo '  - Database: PostgreSQL' && echo '  - GraphQL: Apollo Client + Nest.js GraphQL'",
    "check": "npm run status && npm run info",
    "dev:ci": "npm run env:setup && npm run build:shared && npm run test:ci && npm run lint:check",
    "prepare:dev": "npm run clean && npm run install:all && npm run env:setup",
    "workflow:test": "echo 'ðŸ§ª Testing development workflow...' && npm run env:validate && npm run build:shared && npm run type-check:ci && echo 'âœ… Development workflow is ready!'",
    "dev:validate": "npm run env:validate && npm run build:shared && echo 'âœ… Development environment is ready for concurrent development!'"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.45.0",
    "prettier": "^3.0.0",
    "typescript": "^5.1.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}